#!/usr/bin/env python3
import os
import sys
import ssl
from http.server import HTTPServer, SimpleHTTPRequestHandler

PORT = 443
if len(sys.argv) > 1:
    PORT = int(sys.argv[1])
DOTFILES = os.environ["DOTFILES"]
FULLCHAIN_FILE = DOTFILES + "/keys/fullchain.pem"
PRIV_KEY_FILE = DOTFILES + "/keys/privkey.pem"

favicon = open(DOTFILES+"/assets/favicon.ico", 'rb').read()

class Handler (SimpleHTTPRequestHandler):
    def do_GET(self):
        # favicon
        if self.path == "/favicon.ico":
            self.send_response(200)
            self.send_header("Content-Type", "image/x-icon")
            self.wfile.write(favicon)
            return

        SimpleHTTPRequestHandler.do_GET(self)


    def end_headers(self):
        self.send_header('SameSite', 'Strict')
        SimpleHTTPRequestHandler.end_headers(self)

context = ssl.SSLContext(ssl.PROTOCOL_TLS_SERVER)
context.load_cert_chain(certfile=FULLCHAIN_FILE, keyfile=PRIV_KEY_FILE)

with HTTPServer(("", PORT), Handler) as httpd:
    print("serving at address", httpd.server_address,
          "using key file", PRIV_KEY_FILE,
          "using fullchain file", FULLCHAIN_FILE)
    httpd.socket = context.wrap_socket(httpd.socket, server_side=True)
    httpd.serve_forever()
