# 少し凝った zshrc
# License : MIT
# http://mollifier.mit-license.org/

########################################
# 環境変数
export LANG=ja_JP.UTF-8

# PATHの設定
#export myTEXMF=/usr/local/texlive/texmf-local
export PATH=$PATH:$HOME/.mybin

# rbenv設定
export PATH=$HOME/.rbenv/bin:$PATH
eval "$(rbenv init - zsh)"
export CC=/usr/bin/gcc
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# golang 設定
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export GOROOT=/usr/local/opt/go/libexec
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin:$HOME/.go/bin

export PATH="$HOME/.rbenv/shims:$PATH"
export PATH=$PATH:./node_modules/.bin
export PATH=$HOME/.nodebrew/current/bin:$PATH
export PATH=$PATH:$HOME/.config/yarn/global/node_modules/.bin/
#for zsh-completions
#fpath=(/usr/local/share/zsh-completions $fpath)

#補完機能を有効にする
#autoload -Uz compinit #compinit -u

# 色を使用出来るようにする
autoload -Uz colors
colors

# emacs 風キーバインドにする
#bindkey -e

# 単語移動
bindkey '^f' forward-word
bindkey '^b' backward-word

# ヒストリの設定
HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

# プロンプト
# 1行表示
#PROMPT="%~ %# "
# 2行表示
PROMPT="%{${fg[red]}%}[%n@%m]%{${reset_color}%} %~
%# "


# 単語の区切り文字を指定する
autoload -Uz select-word-style
select-word-style default
# ここで指定した文字は単語区切りとみなされる
# / も区切りと扱うので、^W でディレクトリ１つ分を削除できる
zstyle ':zle:*' word-chars " /=;@:{},|"
zstyle ':zle:*' word-style unspecified

########################################
# 補完
# 補完機能を有効にする
autoload -Uz compinit
compinit

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# ../ の後は今いるディレクトリを補完しない
zstyle ':completion:*' ignore-parents parent pwd ..

# sudo の後ろでコマンド名を補完する
zstyle ':completion:*:sudo:*' command-path /usr/local/sbin /usr/local/bin \
                   /usr/sbin /usr/bin /sbin /bin /usr/X11R6/bin

# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'


########################################
# vcs_info
autoload -Uz vcs_info
autoload -Uz add-zsh-hook

zstyle ':vcs_info:*' formats '%F{green}(%s)-[%b]%f'
zstyle ':vcs_info:*' actionformats '%F{red}(%s)-[%b|%a]%f'

function _update_vcs_info_msg() {
    LANG=en_US.UTF-8 vcs_info
    RPROMPT="${vcs_info_msg_0_}"
}
add-zsh-hook precmd _update_vcs_info_msg


########################################
# オプション
# 日本語ファイル名を表示可能にする
setopt print_eight_bit

# beep を無効にする
setopt no_beep

# フローコントロールを無効にする
setopt no_flow_control

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ディレクトリ名だけでcdする
setopt auto_cd

# cd したら自動的にpushdする
setopt auto_pushd
# 重複したディレクトリを追加しない
setopt pushd_ignore_dups

# 同時に起動したzshの間でヒストリを共有する
setopt share_history

# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups

# スペースから始まるコマンド行はヒストリに残さない
setopt hist_ignore_space

# ヒストリに保存するときに余分なスペースを削除する
setopt hist_reduce_blanks

# 高機能なワイルドカード展開を使用する
setopt extended_glob

########################################
# キーバインド

# ^R で履歴検索をするときに * でワイルドカードを使用出来るようにする
bindkey '^R' history-incremental-pattern-search-backward
bindkey "^[[3~" delete-char

########################################

# lsの色設定
#export LSCOLORS=cxfxcxdxbxegedabagacad

# エイリアス
#alias ls="ls -G"
alias la='ls -lta'
alias l='ls -lt'
alias tw='tw -yes'
alias vi='vim'

alias grep='grep --color'
alias egrep='egrep --color'

alias rm='rm -rf'
alias cp='cp -i'
alias scp='scp -r'
alias mv='mv -i'
alias vinone='vi -u NONE -U NONE --noplugin'


alias mkdir='mkdir -p'

# sudo の後のコマンドでエイリアスを有効にする
alias sudo='sudo '

# グローバルエイリアス
alias -g L='| less'
alias -g G='| grep'

alias R="R --no-save --no-restore-data -q"

## アプリのエイリアス
alias skim="open -a '/Applications/Skim.app'"

## bundle exec rake test
alias bert="bundle exec rake test"

alias be="bundle exec"
alias ber="bundle exec ruby"

# C で標準出力をクリップボードにコピーする
# mollifier delta blog : http://mollifier.hatenablog.com/entry/20100317/p1
if which pbcopy >/dev/null 2>&1 ; then
    # Mac
    alias -g C='| pbcopy'
elif which xsel >/dev/null 2>&1 ; then
    # Linux
    alias -g C='| xsel --input --clipboard'
elif which putclip >/dev/null 2>&1 ; then
    # Cygwin
    alias -g C='| putclip'
fi

########################################
# OS 別の設定
case ${OSTYPE} in
    darwin*)
        #Mac用の設定
        export CLICOLOR=1
        alias ls='ls -G -F'
        ;;
    linux*)
        #Linux用の設定
        alias ls='ls -F --color=auto'
        ;;
esac

# mkdev コマンドを作成する
mkdev () {
  if [ ! -n "$1" ]
  then
    echo "Usage: mkdev dir-name"
    return
  fi
  local dirName=$1
  local rootDir=$(ghq root)
  local githubUser="github.com/$(git config user.name)"
  if [[ dirName = */* ]]
  then
    githubUser = "github.com"
  fi
  local devPath="${rootDir}/${githubUser}/${dirName}"
  mkdir -p ${devPath}
  cd ${devPath}
}

# vim:set ft=zsh:

# OPAM configuration
. /Users/bokken/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# tmux 系の処理を記述
## 起動時に tmux が保持しているセッションを表示
tmux has-session >/dev/null 2>&1 && if [ -z "${TMUX}" ]; then
    echo '% tmux list-sessions'
    tmux list-sessions
    echo '% tmux list-windows -a'
    tmux list-windows -a
fi

# zsh の補完を sshmux コマンドでも有効にする
compdef sshmux=ssh

# tmux 起動中じゃなければ自動的に tmux を起動する
if [[ ! -n $TMUX ]]; then
  tmux new-session
fi
